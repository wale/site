---
import Layout from "~/layouts/MainLayout.astro";
import Nav from "~/components/Nav.astro";
import Footer from "~/components/Footer.astro";

import { getCollection } from "astro:content";
import Icon from "astro-iconify";

const blogPosts = await getCollection("blog");
---


<Layout
    title="Posts | Duale Siad"
    description="Wale's blog posts."
>
    <Nav />
    <main class="flex flex-1 flex-col gap-4 pl-10 pb-10 pr-7 max-w-5xl w-full self-center">
        <header class="flex flex-col gap-4">
            <h1 class="text-4xl font-bold">Posts</h1>
            <span class="text-xl font-regular">
                This is a collation of my posts that I write occasionally. 
                While the content can range in topics, these blog posts usually relate to IT and technology in some form.
            </span>
            <span class="text-lg italic">
                Not all of my posts prior to December 2023 have been moved to the rewritten site. All posts are archived <a href="https://github.com/wale/site/tree/legacy/src/pages/blog" class="underline underline-offset-4">on Github</a>.
            </span>
            <a href="/rss.xml" class="flex items-center gap-4 flex-row">
                <Icon name="simple-icons:rss" height="24" />
                RSS Feed
            </a>
        </header>
        <div class="flex flex-col gap-4">
            {
                blogPosts.sort((a, b) => +b.data.published - +a.data.published).map(({ data, slug }) => (
                  <article class="post">
                    <a class="flex flex-col gap-2 p-5" href={`/blog/${slug}`}>
                      <div class="flex flex-col gap-4">
                        <h2 class="text-2xl font-bold">{data.title}</h2>
                        <p class="text-lg font-normal">{data.description}</p>
                      </div>
                      <h2 class="text-lg font-light italic">Published {data.published.toDateString()}</h2>
                      {!!data.tags && (
                        <div class="flex flex-row flex-wrap gap-2">
                          {data.tags.map((tag) => (
                            <span class="rounded-full border-[1px] px-3 py-1 text-base">
                              {tag}
                            </span>
                          ))}
                        </div>
                      )}
                    </a>
                  </article>
                ))
              }
        </div>
    </main>
    <Footer />
</Layout>
<style>
    .post {
        @apply rounded-lg border-[1px] border-grayscale-950;
    }
</style>